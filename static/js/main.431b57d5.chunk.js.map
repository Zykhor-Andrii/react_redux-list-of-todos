{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","api.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","value","initionState","query","status","filterReducer","todosReducer","rootReducer","combineReducers","currentTodo","filter","todos","store","createStore","composeWithDevTools","applyMiddleware","thunk","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","filterTodos","useMemo","newTodos","completed","title","trim","toLowerCase","includes","length","className","map","id","onClick","actionsCurrent","selectedTodo","TodoFilter","removeQvery","setQuery","setStatus","onSubmit","event","preventDefault","onChange","target","placeholder","style","pointerEvents","Loader","TodoModal","useState","user","setUser","useEffect","userId","data","modalActions","href","email","name","App","actionsTodo","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.431b57d5.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/REMOVE':\n      return null;\n\n    case 'currentTodo/SET':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype RemoveQueryAction = {\n  type: 'filter/removeQuery'\n};\n\ntype SetQueryAction = {\n  type: 'filter/setQuery'\n  payload: string;\n};\n\ntype SetStatusAction = {\n  type: 'filter/status',\n  payload: Status,\n};\n\ntype State = {\n  query: string,\n  status: Status,\n};\n\nconst removeQvery = (): RemoveQueryAction => (\n  { type: 'filter/removeQuery' }\n);\n\nconst setQuery = (value: string): SetQueryAction => (\n  {\n    type: 'filter/setQuery',\n    payload: value,\n  }\n);\n\nconst setStatus = (value: Status): SetStatusAction => (\n  {\n    type: 'filter/status',\n    payload: value,\n  }\n);\n\ntype Action = RemoveQueryAction | SetQueryAction | SetStatusAction;\n\nexport const actions = { removeQvery, setQuery, setStatus };\n\nconst initionState: State = {\n  query: '',\n  status: 'all',\n};\n\nconst filterReducer = (\n  state: State = initionState,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'filter/removeQuery':\n      return { ...state, query: '' };\n\n    case 'filter/setQuery':\n      return { ...state, query: action.payload };\n\n    case 'filter/status':\n      return { ...state, status: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodoAction = {\n  type: 'todos/set',\n  payload: Todo[]\n};\n\nconst setTodos = (todo: Todo[]): SetTodoAction => ({\n  type: 'todos/set',\n  payload: todo,\n});\n\ntype Action = SetTodoAction;\ntype State = Todo[];\n\nexport const actions = { setTodos };\n\nconst todosReducer = (state: State = [], action: Action): Todo[] => {\n  switch (action.type) {\n    case 'todos/set':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { useMemo } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\n\nimport { Todo } from '../../types/Todo';\nimport { actions as actionsCurrent } from '../../features/currentTodo';\n\nexport const TodoList: React.FC = () => {\n  const { query, status } = useAppSelector(state => state.filter);\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  const todos = useAppSelector(state => state.todos);\n\n  const filterTodos = useMemo(() => {\n    let newTodos = [...todos];\n\n    newTodos = newTodos.filter((todo) => {\n      switch (status) {\n        case 'active':\n          return !todo.completed;\n\n        case 'completed':\n          return todo.completed;\n\n        default:\n          return true;\n      }\n    });\n\n    newTodos = newTodos.filter((todo) => (\n      todo.title.trim().toLowerCase().includes(query.trim().toLowerCase())));\n\n    return newTodos;\n  }, [query, todos, status]);\n\n  const selectedTodo = (todo: Todo) => {\n    dispatch(actionsCurrent.setTodo(todo));\n  };\n\n  return (\n    <>\n      {\n        !filterTodos.length ? (\n          <p className=\"notification is-warning\">\n            There are no todos matching current filter criteria\n          </p>\n        ) : (\n          <table className=\"table is-narrow is-fullwidth\">\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </th>\n                <th>Title</th>\n                <th> </th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {\n                filterTodos.map((todo: Todo) => (\n                  <tr\n                    data-cy=\"todo\"\n                    className=\"\"\n                    key={todo.id}\n                  >\n                    <td className=\"is-vcentered\">\n                      {todo.id}\n                    </td>\n                    <td className=\"is-vcentered\">\n                      {\n                        todo.completed && (\n                          <span className=\"icon\" data-cy=\"iconCompleted\">\n                            <i className=\"fas fa-check\" />\n                          </span>\n                        )\n                      }\n\n                    </td>\n                    <td className=\"is-vcentered is-expanded\">\n                      <p\n                        className={\n                          todo.completed\n                            ? 'has-text-success'\n                            : 'has-text-danger'\n                        }\n                      >\n                        {todo.title}\n                      </p>\n                    </td>\n                    <td className=\"has-text-right is-vcentered\">\n                      {todo.id === currentTodo?.id\n                        ? (\n                          <button\n                            data-cy=\"selectButton\"\n                            className=\"button\"\n                            type=\"button\"\n                          >\n                            <span className=\"icon\">\n                              <i className=\"far fa-eye-slash\" />\n                            </span>\n                          </button>\n                        )\n                        : (\n                          <button\n                            data-cy=\"selectButton\"\n                            className=\"button\"\n                            type=\"button\"\n                            onClick={() => {\n                              selectedTodo(todo);\n                            }}\n                          >\n                            <span className=\"icon\">\n                              <i className=\"far fa-eye\" />\n                            </span>\n                          </button>\n                        )}\n                    </td>\n                  </tr>\n                ))\n\n              }\n            </tbody>\n          </table>\n        )\n      }\n    </>\n  );\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { removeQvery, setQuery, setStatus } = actions;\n  const { query } = useAppSelector(state => state.filter);\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => {\n              dispatch(setStatus(event.target.value as Status));\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => dispatch(setQuery(event.target.value))}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch(removeQvery())}\n            />\n          )}\n\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { getUser } from '../../api';\nimport { actions as modalActions } from '../../features/currentTodo';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    getUser(currentTodo?.userId || 0)\n      .then((data) => setUser(data));\n  }, [currentTodo?.id]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {currentTodo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => dispatch(modalActions.removeTodo())}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{currentTodo?.title}</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n              {' by '}\n              <a href={user?.email}>{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { getTodos } from './api';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppSelector, useAppDispatch } from './app/hooks';\nimport { actions as actionsTodo } from './features/todos';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const todos = useAppSelector(state => state.todos);\n\n  useEffect(() => {\n    getTodos()\n      .then((data) => dispatch(actionsTodo.setTodos(data)));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length\n                ? <Loader />\n                : <TodoList />}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}